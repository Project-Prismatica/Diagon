{"/mnt/c/Projects/Prismatica/Diagon/src/diagon-ui/app/renderers/backdoor-factory.js":{"size":768,"mtime":1549778203569,"results":{"filePath":"/mnt/c/Projects/Prismatica/Diagon/src/diagon-ui/app/renderers/backdoor-factory.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'ipcRenderer' is assigned a value but never used.","line":1,"column":9,"nodeType":"Identifier","endLine":1,"endColumn":20},{"ruleId":"no-unused-vars","severity":2,"message":"'remote' is assigned a value but never used.","line":1,"column":22,"nodeType":"Identifier","endLine":1,"endColumn":28},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":1,"column":53,"nodeType":"Program","fix":{"range":[52,54],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":2,"column":43,"nodeType":"Program","fix":{"range":[96,98],"text":"\n"}},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":3,"column":1,"nodeType":"VariableDeclaration","endLine":3,"endColumn":24,"fix":{"range":[98,101],"text":"let"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":3,"column":24,"nodeType":"Program","fix":{"range":[121,123],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":4,"column":1,"nodeType":"Program","fix":{"range":[123,125],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":5,"column":1,"nodeType":"Program","fix":{"range":[125,127],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":6,"column":52,"nodeType":"Program","fix":{"range":[178,180],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":7,"column":1,"nodeType":"Program","fix":{"range":[180,182],"text":"\n"}},{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":8,"column":3,"nodeType":"Line","endLine":8,"endColumn":27,"fix":{"range":[186,186],"text":" "}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":8,"column":27,"nodeType":"Program","fix":{"range":[208,210],"text":"\n"}},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":9,"column":15,"nodeType":"BinaryExpression","endLine":9,"endColumn":80,"fix":{"range":[224,289],"text":"`C:\\\\Projects\\\\Prismatica\\\\Diagon\\\\Arsenal\\\\${  payload  }.json`"}},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":9,"column":90,"nodeType":"FunctionExpression","endLine":28,"endColumn":4,"fix":{"range":[299,759],"text":"(err, contents) => {\r\n\r\n\r\n  //Exec all build commands\r\n  Object.entries(JSON.parse(contents).buildcmds).forEach(entry => {\r\n    let key = entry[0];\r\n    let value = entry[1];\r\n\r\n    exec(value.cmd, (err, stdout, stderr) => {\r\n      if (err) {\r\n        // node couldn't execute the command\r\n        return;\r\n      }\r\n\r\n      // the *entire* stdout and stderr (buffered)\r\n      console.log(`${stdout}`);\r\n      console.log(`${stderr}`);\r\n    });\r\n  });\r\n  }"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":9,"column":90,"nodeType":"FunctionExpression","endLine":28,"endColumn":4},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":9,"column":115,"nodeType":"Program","fix":{"range":[324,326],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":10,"column":1,"nodeType":"Program","fix":{"range":[326,328],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":11,"column":1,"nodeType":"Program","fix":{"range":[328,330],"text":"\n"}},{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":12,"column":3,"nodeType":"Line","endLine":12,"endColumn":28,"fix":{"range":[334,334],"text":" "}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":12,"column":28,"nodeType":"Program","fix":{"range":[357,359],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":13,"column":68,"nodeType":"Program","fix":{"range":[426,428],"text":"\n"}},{"ruleId":"no-unused-vars","severity":2,"message":"'key' is assigned a value but never used.","line":14,"column":9,"nodeType":"Identifier","endLine":14,"endColumn":12},{"ruleId":"prefer-const","severity":2,"message":"'key' is never reassigned. Use 'const' instead.","line":14,"column":9,"nodeType":"Identifier","endLine":14,"endColumn":12,"fix":{"range":[432,435],"text":"const"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":14,"column":24,"nodeType":"Program","fix":{"range":[451,453],"text":"\n"}},{"ruleId":"prefer-const","severity":2,"message":"'value' is never reassigned. Use 'const' instead.","line":15,"column":9,"nodeType":"Identifier","endLine":15,"endColumn":14,"fix":{"range":[457,460],"text":"const"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":15,"column":26,"nodeType":"Program","fix":{"range":[478,480],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":16,"column":1,"nodeType":"Program","fix":{"range":[480,482],"text":"\n"}},{"ruleId":"no-shadow","severity":2,"message":"'err' is already declared in the upper scope.","line":17,"column":22,"nodeType":"Identifier","endLine":17,"endColumn":25},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":17,"column":47,"nodeType":"Program","fix":{"range":[528,530],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":18,"column":17,"nodeType":"Program","fix":{"range":[546,548],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":19,"column":45,"nodeType":"Program","fix":{"range":[592,594],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":20,"column":16,"nodeType":"Program","fix":{"range":[609,611],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":21,"column":8,"nodeType":"Program","fix":{"range":[618,620],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":22,"column":1,"nodeType":"Program","fix":{"range":[620,622],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":23,"column":51,"nodeType":"Program","fix":{"range":[672,674],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":24,"column":32,"nodeType":"Program","fix":{"range":[705,707],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":25,"column":32,"nodeType":"Program","fix":{"range":[738,740],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":26,"column":8,"nodeType":"Program","fix":{"range":[747,749],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":27,"column":6,"nodeType":"Program","fix":{"range":[754,756],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":28,"column":6,"nodeType":"Program","fix":{"range":[761,763],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":29,"column":1,"nodeType":"Program","fix":{"range":[763,765],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":30,"column":2,"nodeType":"Program","fix":{"range":[766,768],"text":"\n"}}],"errorCount":41,"warningCount":1,"fixableErrorCount":37,"fixableWarningCount":0,"source":null},"hashOfConfig":"cfglpq"},"/mnt/c/Projects/Prismatica/Diagon/src/diagon-ui/app/containers/CounterPage.js":{"size":452,"mtime":1549766170404,"results":{"filePath":"/mnt/c/Projects/Prismatica/Diagon/src/diagon-ui/app/containers/CounterPage.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"cfglpq"},"/mnt/c/Projects/Prismatica/Diagon/src/diagon-ui/app/components/menus/Settings.js":{"size":1174,"mtime":1551910488491,"results":{"filePath":"/mnt/c/Projects/Prismatica/Diagon/src/diagon-ui/app/components/menus/Settings.js","messages":[{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":1,"column":9,"nodeType":"Program","fix":{"range":[8,10],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":2,"column":42,"nodeType":"Program","fix":{"range":[51,53],"text":"\n"}},{"ruleId":"no-unused-vars","severity":2,"message":"'Link' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","endLine":3,"endColumn":14},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":3,"column":41,"nodeType":"Program","fix":{"range":[93,95],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":4,"column":1,"nodeType":"Program","fix":{"range":[95,97],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":5,"column":44,"nodeType":"Program","fix":{"range":[140,142],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":6,"column":1,"nodeType":"Program","fix":{"range":[142,144],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":7,"column":57,"nodeType":"Program","fix":{"range":[200,202],"text":"\n"}},{"ruleId":"no-unused-vars","severity":2,"message":"'FormHelperText' is defined but never used.","line":8,"column":8,"nodeType":"Identifier","endLine":8,"endColumn":22},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":8,"column":63,"nodeType":"Program","fix":{"range":[264,266],"text":"\n"}},{"ruleId":"no-unused-vars","severity":2,"message":"'InputLabel' is defined but never used.","line":9,"column":8,"nodeType":"Identifier","endLine":9,"endColumn":18},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":9,"column":55,"nodeType":"Program","fix":{"range":[320,322],"text":"\n"}},{"ruleId":"no-unused-vars","severity":2,"message":"'TextField' is defined but never used.","line":10,"column":8,"nodeType":"Identifier","endLine":10,"endColumn":17},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":10,"column":53,"nodeType":"Program","fix":{"range":[374,376],"text":"\n"}},{"ruleId":"no-unused-vars","severity":2,"message":"'Input' is defined but never used.","line":11,"column":8,"nodeType":"Identifier","endLine":11,"endColumn":13},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":11,"column":45,"nodeType":"Program","fix":{"range":[420,422],"text":"\n"}},{"ruleId":"no-unused-vars","severity":2,"message":"'Button' is defined but never used.","line":12,"column":8,"nodeType":"Identifier","endLine":12,"endColumn":14},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":12,"column":47,"nodeType":"Program","fix":{"range":[468,470],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":13,"column":1,"nodeType":"Program","fix":{"range":[470,472],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":14,"column":1,"nodeType":"Program","fix":{"range":[472,474],"text":"\n"}},{"ruleId":"prefer-destructuring","severity":2,"message":"Use object destructuring.","line":15,"column":7,"nodeType":"VariableDeclarator","endLine":15,"endColumn":42},{"ruleId":"no-unused-vars","severity":2,"message":"'remote' is assigned a value but never used.","line":15,"column":7,"nodeType":"Identifier","endLine":15,"endColumn":13},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":15,"column":43,"nodeType":"Program","fix":{"range":[516,518],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":16,"column":1,"nodeType":"Program","fix":{"range":[518,520],"text":"\n"}},{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":17,"column":1,"nodeType":"Line","endLine":17,"endColumn":64,"fix":{"range":[522,522],"text":" "}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":17,"column":64,"nodeType":"Program","fix":{"range":[583,585],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":18,"column":1,"nodeType":"Program","fix":{"range":[585,587],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":19,"column":57,"nodeType":"Program","fix":{"range":[643,645],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":20,"column":16,"nodeType":"Program","fix":{"range":[660,662],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":21,"column":1,"nodeType":"Program","fix":{"range":[662,664],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":22,"column":23,"nodeType":"Program","fix":{"range":[686,688],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":23,"column":18,"nodeType":"Program","fix":{"range":[705,707],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":24,"column":1,"nodeType":"Program","fix":{"range":[707,709],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":25,"column":19,"nodeType":"Program","fix":{"range":[727,729],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":26,"column":18,"nodeType":"Program","fix":{"range":[746,748],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":27,"column":7,"nodeType":"Program","fix":{"range":[754,756],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":28,"column":4,"nodeType":"Program","fix":{"range":[759,761],"text":"\n"}},{"ruleId":"lines-between-class-members","severity":2,"message":"Expected blank line between class members.","line":29,"column":3,"nodeType":"MethodDefinition","endLine":31,"endColumn":4,"fix":{"range":[759,759],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":29,"column":20,"nodeType":"Program","fix":{"range":[780,782],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":30,"column":36,"nodeType":"Program","fix":{"range":[817,819],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":31,"column":4,"nodeType":"Program","fix":{"range":[822,824],"text":"\n"}},{"ruleId":"lines-between-class-members","severity":2,"message":"Expected blank line between class members.","line":32,"column":3,"nodeType":"MethodDefinition","endLine":49,"endColumn":4,"fix":{"range":[822,822],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":32,"column":13,"nodeType":"Program","fix":{"range":[836,838],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":33,"column":13,"nodeType":"Program","fix":{"range":[850,852],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":34,"column":12,"nodeType":"Program","fix":{"range":[863,865],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":35,"column":15,"nodeType":"Program","fix":{"range":[879,881],"text":"\n"}},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":36,"column":17,"nodeType":"MemberExpression","endLine":36,"endColumn":32},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":36,"column":33,"nodeType":"Program","fix":{"range":[913,915],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":37,"column":50,"nodeType":"Program","fix":{"range":[964,966],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":38,"column":17,"nodeType":"Program","fix":{"range":[982,984],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":39,"column":10,"nodeType":"Program","fix":{"range":[993,995],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":40,"column":16,"nodeType":"Program","fix":{"range":[1010,1012],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":41,"column":38,"nodeType":"Program","fix":{"range":[1049,1051],"text":"\n"}},{"ruleId":"react/self-closing-comp","severity":2,"message":"Empty components are self-closing","line":42,"column":13,"nodeType":"JSXOpeningElement","endLine":42,"endColumn":26,"fix":{"range":[1075,1106],"text":" />"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":42,"column":26,"nodeType":"Program","fix":{"range":[1076,1078],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":43,"column":1,"nodeType":"Program","fix":{"range":[1078,1080],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":44,"column":27,"nodeType":"Program","fix":{"range":[1106,1108],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":45,"column":17,"nodeType":"Program","fix":{"range":[1124,1126],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":46,"column":17,"nodeType":"Program","fix":{"range":[1142,1144],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":47,"column":13,"nodeType":"Program","fix":{"range":[1156,1158],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":48,"column":7,"nodeType":"Program","fix":{"range":[1164,1166],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":49,"column":4,"nodeType":"Program","fix":{"range":[1169,1171],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":50,"column":2,"nodeType":"Program","fix":{"range":[1172,1174],"text":"\n"}}],"errorCount":63,"warningCount":0,"fixableErrorCount":54,"fixableWarningCount":0,"source":null},"hashOfConfig":"cfglpq"},"/mnt/c/Projects/Prismatica/Diagon/src/diagon-ui/app/components/WindowControls.js":{"size":2153,"mtime":1549782184531,"results":{"filePath":"/mnt/c/Projects/Prismatica/Diagon/src/diagon-ui/app/components/WindowControls.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'Link' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","endLine":3,"endColumn":14},{"ruleId":"no-unused-vars","severity":2,"message":"'remote' is assigned a value but never used.","line":7,"column":7,"nodeType":"Identifier","endLine":7,"endColumn":13},{"ruleId":"prefer-destructuring","severity":2,"message":"Use object destructuring.","line":7,"column":7,"nodeType":"VariableDeclarator","endLine":7,"endColumn":42},{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":10,"column":1,"nodeType":"Line","endLine":10,"endColumn":72,"fix":{"range":[224,224],"text":" "}},{"ruleId":"class-methods-use-this","severity":2,"message":"Expected 'this' to be used by class method 'windowMaximize'.","line":23,"column":17,"nodeType":"FunctionExpression","messageId":"missingThis","endLine":30,"endColumn":4},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":24,"column":5,"nodeType":"VariableDeclaration","endLine":24,"endColumn":51,"fix":{"range":[547,550],"text":"let"}},{"ruleId":"lines-between-class-members","severity":2,"message":"Expected blank line between class members.","line":31,"column":3,"nodeType":"MethodDefinition","endLine":34,"endColumn":4,"fix":{"range":[702,702],"text":"\n"}},{"ruleId":"class-methods-use-this","severity":2,"message":"Expected 'this' to be used by class method 'windowMinimize'.","line":31,"column":17,"nodeType":"FunctionExpression","messageId":"missingThis","endLine":34,"endColumn":4},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":32,"column":5,"nodeType":"VariableDeclaration","endLine":32,"endColumn":51,"fix":{"range":[728,731],"text":"let"}},{"ruleId":"lines-between-class-members","severity":2,"message":"Expected blank line between class members.","line":35,"column":3,"nodeType":"MethodDefinition","endLine":38,"endColumn":4,"fix":{"range":[801,801],"text":"\n"}},{"ruleId":"class-methods-use-this","severity":2,"message":"Expected 'this' to be used by class method 'windowClose'.","line":35,"column":14,"nodeType":"FunctionExpression","messageId":"missingThis","endLine":38,"endColumn":4},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":36,"column":5,"nodeType":"VariableDeclaration","endLine":36,"endColumn":51,"fix":{"range":[824,827],"text":"let"}},{"ruleId":"no-unused-vars","severity":2,"message":"'increment' is assigned a value but never used.","line":42,"column":7,"nodeType":"Identifier","endLine":42,"endColumn":16},{"ruleId":"no-unused-vars","severity":2,"message":"'incrementIfOdd' is assigned a value but never used.","line":43,"column":7,"nodeType":"Identifier","endLine":43,"endColumn":21},{"ruleId":"no-unused-vars","severity":2,"message":"'incrementAsync' is assigned a value but never used.","line":44,"column":7,"nodeType":"Identifier","endLine":44,"endColumn":21},{"ruleId":"no-unused-vars","severity":2,"message":"'decrement' is assigned a value but never used.","line":45,"column":7,"nodeType":"Identifier","endLine":45,"endColumn":16},{"ruleId":"no-unused-vars","severity":2,"message":"'counter' is assigned a value but never used.","line":46,"column":7,"nodeType":"Identifier","endLine":46,"endColumn":14},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Static HTML elements with event handlers require a role.","line":52,"column":11,"nodeType":"JSXOpeningElement","endLine":52,"endColumn":100},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":52,"column":11,"nodeType":"JSXOpeningElement","endLine":52,"endColumn":100},{"ruleId":"react/self-closing-comp","severity":2,"message":"Empty components are self-closing","line":54,"column":15,"nodeType":"JSXOpeningElement","endLine":54,"endColumn":115,"fix":{"range":[1455,1466],"text":" />"}},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Static HTML elements with event handlers require a role.","line":57,"column":11,"nodeType":"JSXOpeningElement","endLine":57,"endColumn":99},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":57,"column":11,"nodeType":"JSXOpeningElement","endLine":57,"endColumn":99},{"ruleId":"react/no-unknown-property","severity":2,"message":"Unknown property 'class' found, use 'className' instead","line":58,"column":18,"nodeType":"JSXAttribute","endLine":58,"endColumn":40,"fix":{"range":[1619,1624],"text":"className"}},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Static HTML elements with event handlers require a role.","line":62,"column":11,"nodeType":"JSXOpeningElement","endLine":62,"endColumn":99},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":62,"column":11,"nodeType":"JSXOpeningElement","endLine":62,"endColumn":99},{"ruleId":"react/self-closing-comp","severity":2,"message":"Empty components are self-closing","line":64,"column":17,"nodeType":"JSXOpeningElement","endLine":64,"endColumn":75,"fix":{"range":[2067,2075],"text":" />"}}],"errorCount":26,"warningCount":0,"fixableErrorCount":9,"fixableWarningCount":0,"source":null},"hashOfConfig":"cfglpq"},"/mnt/c/Projects/Prismatica/Diagon/src/diagon-ui/app/components/PrismaticInterpreter.js":{"size":7819,"mtime":1551908884537,"results":{"filePath":"/mnt/c/Projects/Prismatica/Diagon/src/diagon-ui/app/components/PrismaticInterpreter.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'Link' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","endLine":3,"endColumn":14},{"ruleId":"no-unused-vars","severity":2,"message":"'routes' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","endLine":4,"endColumn":14},{"ruleId":"import/order","severity":2,"message":"`terminal-in-react` import should occur before import of `../constants/routes.json`","line":7,"column":1,"nodeType":"ImportDeclaration","endLine":7,"endColumn":42,"fix":{"range":[92,215],"text":"import Terminal from 'terminal-in-react';\nimport routes from '../constants/routes.json';\nimport styles from './Home.css';\n\n"}},{"ruleId":"no-unused-vars","severity":2,"message":"'remote' is assigned a value but never used.","line":13,"column":7,"nodeType":"Identifier","endLine":13,"endColumn":13},{"ruleId":"prefer-destructuring","severity":2,"message":"Use object destructuring.","line":13,"column":7,"nodeType":"VariableDeclarator","endLine":13,"endColumn":42},{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":27,"column":5,"nodeType":"Line","endLine":27,"endColumn":30,"fix":{"range":[590,590],"text":" "}},{"ruleId":"react/no-unused-state","severity":2,"message":"Unused state field: 'hideCompleted'","line":30,"column":8,"nodeType":"Property","endLine":30,"endColumn":28},{"ruleId":"react/no-unused-state","severity":2,"message":"Unused state field: 'agentid'","line":31,"column":8,"nodeType":"Property","endLine":31,"endColumn":19},{"ruleId":"react/no-unused-state","severity":2,"message":"Unused state field: 'task'","line":32,"column":8,"nodeType":"Property","endLine":32,"endColumn":16},{"ruleId":"react/no-unused-state","severity":2,"message":"Unused state field: 'tabs'","line":37,"column":8,"nodeType":"Property","endLine":37,"endColumn":16},{"ruleId":"lines-between-class-members","severity":2,"message":"Expected blank line between class members.","line":40,"column":3,"nodeType":"MethodDefinition","endLine":96,"endColumn":4,"fix":{"range":[813,813],"text":"\n"}},{"ruleId":"promise/catch-or-return","severity":2,"message":"Expected catch() or return","line":42,"column":7,"nodeType":"ExpressionStatement","endLine":56,"endColumn":9},{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":57,"column":7,"nodeType":"Line","endLine":57,"endColumn":22,"fix":{"range":[1295,1295],"text":" "}},{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":58,"column":7,"nodeType":"Line","endLine":58,"endColumn":31,"fix":{"range":[1317,1317],"text":" "}},{"ruleId":"promise/catch-or-return","severity":2,"message":"Expected catch() or return","line":59,"column":7,"nodeType":"ExpressionStatement","endLine":72,"endColumn":9},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":73,"column":7,"nodeType":"VariableDeclaration","endLine":73,"endColumn":39,"fix":{"range":[1741,1744],"text":"let"}},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":73,"column":7,"nodeType":"VariableDeclaration","endLine":73,"endColumn":39},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":73,"column":16,"nodeType":"MemberExpression","endLine":73,"endColumn":38},{"ruleId":"array-callback-return","severity":2,"message":"Expected to return a value in function.","line":80,"column":29,"nodeType":"FunctionExpression","messageId":"expectedInside"},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":80,"column":29,"nodeType":"FunctionExpression","endLine":93,"endColumn":10},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":80,"column":29,"nodeType":"FunctionExpression","endLine":93,"endColumn":10,"fix":{"range":[1943,2365],"text":"(key) => {\n          //console.log(key)\n          //console.log(Object.keys(sessions).length)\n          if (key >= Object.keys(sessions).length) {\n            addSession({\n                aid: dm[key].agentid,\n                type: dm[key].type,\n                name: \"\",\n                user: dm[key].user,\n                delay: dm[key].delay,\n                last: dm[key].last\n            })\n          }\n        }"}},{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":81,"column":11,"nodeType":"Line","endLine":81,"endColumn":29,"fix":{"range":[1971,1971],"text":" "}},{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":82,"column":11,"nodeType":"Line","endLine":82,"endColumn":54,"fix":{"range":[2000,2000],"text":" "}},{"ruleId":"lines-between-class-members","severity":2,"message":"Expected blank line between class members.","line":97,"column":3,"nodeType":"MethodDefinition","endLine":99,"endColumn":4,"fix":{"range":[2393,2393],"text":"\n"}},{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":101,"column":3,"nodeType":"Line","endLine":101,"endColumn":23,"fix":{"range":[2464,2464],"text":" "}},{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":103,"column":5,"nodeType":"Line","endLine":103,"endColumn":38,"fix":{"range":[2512,2512],"text":" "}},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":104,"column":5,"nodeType":"VariableDeclaration","endLine":104,"endColumn":32,"fix":{"range":[2548,2551],"text":"let"}},{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":106,"column":5,"nodeType":"Line","endLine":106,"endColumn":39,"fix":{"range":[2583,2583],"text":" "}},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":107,"column":5,"nodeType":"VariableDeclaration","endLine":107,"endColumn":53,"fix":{"range":[2620,2623],"text":"let"}},{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":109,"column":5,"nodeType":"Line","endLine":109,"endColumn":23,"fix":{"range":[2676,2676],"text":" "}},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":110,"column":5,"nodeType":"VariableDeclaration","endLine":110,"endColumn":21,"fix":{"range":[2697,2700],"text":"let"}},{"ruleId":"prefer-const","severity":2,"message":"'data' is never reassigned. Use 'const' instead.","line":111,"column":9,"nodeType":"Identifier","endLine":111,"endColumn":13,"fix":{"range":[2718,2721],"text":"const"}},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring props assignment","line":111,"column":16,"nodeType":"MemberExpression","endLine":111,"endColumn":35},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":112,"column":5,"nodeType":"VariableDeclaration","endLine":117,"endColumn":8,"fix":{"range":[2753,2756],"text":"let"}},{"ruleId":"no-unused-vars","severity":2,"message":"'sessionDetails' is assigned a value but never used.","line":112,"column":9,"nodeType":"Identifier","endLine":112,"endColumn":23},{"ruleId":"array-callback-return","severity":2,"message":"Expected to return a value in function.","line":112,"column":48,"nodeType":"FunctionExpression","messageId":"expectedInside"},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":112,"column":48,"nodeType":"FunctionExpression","endLine":117,"endColumn":6},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":112,"column":48,"nodeType":"FunctionExpression","endLine":117,"endColumn":6,"fix":{"range":[2796,2935],"text":"(key) => {\n        if (data[key].id == sid) {\n          agentid = data[key].aid\n          //console.log(data[key].aid)\n        }\n    }"}},{"ruleId":"eqeqeq","severity":2,"message":"Expected '===' and instead saw '=='.","line":113,"column":26,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":115,"column":11,"nodeType":"Line","endLine":115,"endColumn":39,"fix":{"range":[2893,2893],"text":" "}},{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":118,"column":5,"nodeType":"Line","endLine":118,"endColumn":49,"fix":{"range":[2944,2944],"text":" "}},{"ruleId":"object-shorthand","severity":2,"message":"Expected property shorthand.","line":129,"column":9,"nodeType":"Property","endLine":129,"endColumn":17,"fix":{"range":[3269,3277],"text":"cmd"}},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":136,"column":11,"nodeType":"MemberExpression","endLine":136,"endColumn":31},{"ruleId":"eqeqeq","severity":2,"message":"Expected '!==' and instead saw '!='.","line":136,"column":39,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":136,"column":42,"nodeType":"MemberExpression","endLine":136,"endColumn":59},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":137,"column":26,"nodeType":"MemberExpression","endLine":137,"endColumn":43},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":139,"column":22,"nodeType":"MemberExpression","endLine":139,"endColumn":39},{"ruleId":"react/no-access-state-in-setstate","severity":2,"message":"Use callback in setState when referencing the previous state.","line":139,"column":22,"nodeType":"MemberExpression","endLine":139,"endColumn":32},{"ruleId":"prefer-const","severity":2,"message":"'tmptmp' is never reassigned. Use 'const' instead.","line":143,"column":11,"nodeType":"Identifier","endLine":143,"endColumn":17,"fix":{"range":[3558,3561],"text":"const"}},{"ruleId":"no-unused-vars","severity":2,"message":"'tmptmp' is assigned a value but never used.","line":143,"column":11,"nodeType":"Identifier","endLine":143,"endColumn":17},{"ruleId":"lines-between-class-members","severity":2,"message":"Expected blank line between class members.","line":146,"column":3,"nodeType":"MethodDefinition","endLine":174,"endColumn":4,"fix":{"range":[3583,3583],"text":"\n"}},{"ruleId":"prefer-const","severity":2,"message":"'data' is never reassigned. Use 'const' instead.","line":148,"column":9,"nodeType":"Identifier","endLine":148,"endColumn":13,"fix":{"range":[3608,3611],"text":"const"}},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring props assignment","line":148,"column":16,"nodeType":"MemberExpression","endLine":148,"endColumn":35},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":155,"column":5,"nodeType":"VariableDeclaration","endLine":155,"endColumn":28,"fix":{"range":[3905,3908],"text":"let"}},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":155,"column":5,"nodeType":"VariableDeclaration","endLine":155,"endColumn":28},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":156,"column":5,"nodeType":"VariableDeclaration","endLine":168,"endColumn":8},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":156,"column":5,"nodeType":"VariableDeclaration","endLine":168,"endColumn":8,"fix":{"range":[3933,3936],"text":"let"}},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":156,"column":48,"nodeType":"FunctionExpression","endLine":168,"endColumn":6,"fix":{"range":[3976,4918],"text":"(key) => {\n      var sessionInfo = ''\n      if (data[key].id != null) {sessionInfo += data[key].id.toString().padEnd(5, \" \")} else {sessionInfo += \"     \"}\n      if (data[key].type != null) {sessionInfo += data[key].type.toString().padEnd(19, \" \")} else {sessionInfo += \"                   \"}\n      if (data[key].name != null) {sessionInfo += data[key].name.toString().padEnd(14, \" \")} else {sessionInfo += \"             \"}\n      if (data[key].user != null) {sessionInfo += data[key].user.toString().padEnd(20, \" \")} else {sessionInfo += \"                   \"}\n      if (data[key].delay != null) {sessionInfo += data[key].delay.toString().padEnd(7, \" \")} else {sessionInfo += \"       \"}\n      if (data[key].last != null) {sessionInfo += data[key].last.toString().padEnd(10, \" \")} else {sessionInfo += \"          \"}\n\n      console.log(sessionInfo);\n      activeSessions++;\n      //return [Number(key), data[key].id, data[key].dead];\n    }"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":156,"column":48,"nodeType":"FunctionExpression","endLine":168,"endColumn":6},{"ruleId":"array-callback-return","severity":2,"message":"Expected to return a value in function.","line":156,"column":48,"nodeType":"FunctionExpression","messageId":"expectedInside"},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":157,"column":7,"nodeType":"VariableDeclaration","endLine":157,"endColumn":27,"fix":{"range":[3998,4001],"text":"let"}},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":166,"column":7,"nodeType":"UpdateExpression","endLine":166,"endColumn":23},{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":167,"column":7,"nodeType":"Line","endLine":167,"endColumn":60,"fix":{"range":[4861,4861],"text":" "}},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":171,"column":17,"nodeType":"BinaryExpression","endLine":171,"endColumn":65,"fix":{"range":[4958,5006],"text":"`There are ${  activeSessions  } active agents`"}},{"ruleId":"class-methods-use-this","severity":2,"message":"Expected 'this' to be used by class method 'handleChange'.","line":176,"column":15,"nodeType":"FunctionExpression","messageId":"missingThis","endLine":178,"endColumn":4},{"ruleId":"no-unused-vars","severity":2,"message":"'addSession' is assigned a value but never used.","line":185,"column":7,"nodeType":"Identifier","endLine":185,"endColumn":17},{"ruleId":"object-shorthand","severity":2,"message":"Expected property shorthand.","line":209,"column":20,"nodeType":"Property","endLine":209,"endColumn":38,"fix":{"range":[5749,5767],"text":"sessions"}},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":216,"column":28,"nodeType":"MemberExpression","endLine":216,"endColumn":45},{"ruleId":"no-unused-vars","severity":2,"message":"'args' is defined but never used.","line":233,"column":28,"nodeType":"Identifier","endLine":233,"endColumn":32},{"ruleId":"no-unused-vars","severity":2,"message":"'print' is defined but never used.","line":233,"column":34,"nodeType":"Identifier","endLine":233,"endColumn":39},{"ruleId":"no-unused-vars","severity":2,"message":"'runCommand' is defined but never used.","line":233,"column":41,"nodeType":"Identifier","endLine":233,"endColumn":51},{"ruleId":"no-unused-vars","severity":2,"message":"'ret' is assigned a value but never used.","line":234,"column":25,"nodeType":"Identifier","endLine":234,"endColumn":28},{"ruleId":"prefer-const","severity":2,"message":"'ret' is never reassigned. Use 'const' instead.","line":234,"column":25,"nodeType":"Identifier","endLine":234,"endColumn":28,"fix":{"range":[6613,6616],"text":"const"}},{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":235,"column":21,"nodeType":"Line","endLine":235,"endColumn":33,"fix":{"range":[6665,6665],"text":" "}},{"ruleId":"no-unused-vars","severity":2,"message":"'print' is defined but never used.","line":241,"column":34,"nodeType":"Identifier","endLine":241,"endColumn":39},{"ruleId":"no-unused-vars","severity":2,"message":"'runCommand' is defined but never used.","line":241,"column":41,"nodeType":"Identifier","endLine":241,"endColumn":51},{"ruleId":"react/no-unused-state","severity":2,"message":"Unused state field: 'task'","line":243,"column":24,"nodeType":"Property","endLine":243,"endColumn":39},{"ruleId":"react/no-unused-state","severity":2,"message":"Unused state field: 'agentid'","line":244,"column":24,"nodeType":"Property","endLine":244,"endColumn":51},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":244,"column":33,"nodeType":"MemberExpression","endLine":244,"endColumn":51},{"ruleId":"react/no-access-state-in-setstate","severity":2,"message":"Use callback in setState when referencing the previous state.","line":244,"column":33,"nodeType":"MemberExpression","endLine":244,"endColumn":43},{"ruleId":"no-unused-vars","severity":2,"message":"'print' is defined but never used.","line":250,"column":34,"nodeType":"Identifier","endLine":250,"endColumn":39},{"ruleId":"no-unused-vars","severity":2,"message":"'runCommand' is defined but never used.","line":250,"column":41,"nodeType":"Identifier","endLine":250,"endColumn":51},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":252,"column":32,"nodeType":"BinaryExpression","endLine":252,"endColumn":73,"fix":{"range":[7186,7227],"text":"`PROMPT(${  args._[0].toString()  }) > `"}}],"errorCount":80,"warningCount":3,"fixableErrorCount":36,"fixableWarningCount":0,"source":null},"hashOfConfig":"cfglpq"},"/mnt/c/Projects/Prismatica/Diagon/src/diagon-ui/app/components/PageTemplate.js":{"size":590,"mtime":1549766150963,"results":{"filePath":"/mnt/c/Projects/Prismatica/Diagon/src/diagon-ui/app/components/PageTemplate.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'Link' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","endLine":3,"endColumn":14},{"ruleId":"no-unused-vars","severity":2,"message":"'increment' is assigned a value but never used.","line":20,"column":7,"nodeType":"Identifier","endLine":20,"endColumn":16},{"ruleId":"no-unused-vars","severity":2,"message":"'incrementIfOdd' is assigned a value but never used.","line":21,"column":7,"nodeType":"Identifier","endLine":21,"endColumn":21},{"ruleId":"no-unused-vars","severity":2,"message":"'incrementAsync' is assigned a value but never used.","line":22,"column":7,"nodeType":"Identifier","endLine":22,"endColumn":21},{"ruleId":"no-unused-vars","severity":2,"message":"'decrement' is assigned a value but never used.","line":23,"column":7,"nodeType":"Identifier","endLine":23,"endColumn":16},{"ruleId":"no-unused-vars","severity":2,"message":"'counter' is assigned a value but never used.","line":24,"column":7,"nodeType":"Identifier","endLine":24,"endColumn":14}],"errorCount":6,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"hashOfConfig":"cfglpq"},"/mnt/c/Projects/Prismatica/Diagon/src/diagon-ui/app/components/MenuBar.js":{"size":5266,"mtime":1551910567428,"results":{"filePath":"/mnt/c/Projects/Prismatica/Diagon/src/diagon-ui/app/components/MenuBar.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'Link' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","endLine":3,"endColumn":14},{"ruleId":"no-unused-vars","severity":2,"message":"'FormHelperText' is defined but never used.","line":11,"column":8,"nodeType":"Identifier","endLine":11,"endColumn":22},{"ruleId":"no-unused-vars","severity":2,"message":"'InputLabel' is defined but never used.","line":12,"column":8,"nodeType":"Identifier","endLine":12,"endColumn":18},{"ruleId":"no-unused-vars","severity":2,"message":"'Input' is defined but never used.","line":14,"column":8,"nodeType":"Identifier","endLine":14,"endColumn":13},{"ruleId":"prefer-destructuring","severity":2,"message":"Use object destructuring.","line":23,"column":7,"nodeType":"VariableDeclarator","endLine":23,"endColumn":42},{"ruleId":"no-unused-vars","severity":2,"message":"'remote' is assigned a value but never used.","line":23,"column":7,"nodeType":"Identifier","endLine":23,"endColumn":13},{"ruleId":"import/order","severity":2,"message":"`../renderers/backdoor-factory` import should occur before import of `electron`","line":25,"column":1,"nodeType":"ImportDeclaration","endLine":25,"endColumn":62},{"ruleId":"import/first","severity":2,"message":"Import in body of module; reorder to top.","line":25,"column":1,"nodeType":"ImportDeclaration","endLine":25,"endColumn":62,"fix":{"range":[0,913],"text":"// @flow\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faIndustry, faTerminal, faBars, faBug, faKey, faServer, faRadiation } from '@fortawesome/free-solid-svg-icons';\nimport ReactTooltip from 'react-tooltip';\nimport Modal from 'react-responsive-modal';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\n\nimport Loader from 'react-loader-spinner';\n\nimport Settings from './menus/Settings';\n\nimport styles from './Home.css';\n\nimport payloadGenerator from '../renderers/backdoor-factory';\n\nconst remote = require('electron').remote;"}},{"ruleId":"lines-between-class-members","severity":2,"message":"Expected blank line between class members.","line":52,"column":3,"nodeType":"MethodDefinition","endLine":54,"endColumn":4,"fix":{"range":[1369,1369],"text":"\n"}},{"ruleId":"lines-between-class-members","severity":2,"message":"Expected blank line between class members.","line":55,"column":3,"nodeType":"MethodDefinition","endLine":57,"endColumn":4,"fix":{"range":[1434,1434],"text":"\n"}},{"ruleId":"lines-between-class-members","severity":2,"message":"Expected blank line between class members.","line":58,"column":3,"nodeType":"MethodDefinition","endLine":62,"endColumn":4,"fix":{"range":[1501,1501],"text":"\n"}},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":61,"column":22,"nodeType":"MemberExpression","endLine":61,"endColumn":40},{"ruleId":"lines-between-class-members","severity":2,"message":"Expected blank line between class members.","line":63,"column":3,"nodeType":"MethodDefinition","endLine":68,"endColumn":4,"fix":{"range":[1625,1625],"text":"\n"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function 'bind'.","line":65,"column":16,"nodeType":"FunctionExpression","endLine":67,"endColumn":6},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":65,"column":16,"nodeType":"FunctionExpression","endLine":67,"endColumn":6,"fix":{"range":[1695,1816],"text":"() => { //Start the timer\n      this.setState({loader: false}) //After 1 second, set render to true\n    }"}},{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":65,"column":29,"nodeType":"Line","endLine":65,"endColumn":46,"fix":{"range":[1710,1710],"text":" "}},{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":66,"column":38,"nodeType":"Line","endLine":66,"endColumn":74,"fix":{"range":[1765,1765],"text":" "}},{"ruleId":"no-unused-vars","severity":2,"message":"'increment' is assigned a value but never used.","line":76,"column":7,"nodeType":"Identifier","endLine":76,"endColumn":16},{"ruleId":"no-unused-vars","severity":2,"message":"'incrementIfOdd' is assigned a value but never used.","line":77,"column":7,"nodeType":"Identifier","endLine":77,"endColumn":21},{"ruleId":"no-unused-vars","severity":2,"message":"'incrementAsync' is assigned a value but never used.","line":78,"column":7,"nodeType":"Identifier","endLine":78,"endColumn":21},{"ruleId":"no-unused-vars","severity":2,"message":"'decrement' is assigned a value but never used.","line":79,"column":7,"nodeType":"Identifier","endLine":79,"endColumn":16},{"ruleId":"no-unused-vars","severity":2,"message":"'counter' is assigned a value but never used.","line":80,"column":7,"nodeType":"Identifier","endLine":80,"endColumn":14},{"ruleId":"arrow-body-style","severity":2,"message":"Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.","line":91,"column":27,"nodeType":"ArrowFunctionExpression","messageId":"unexpectedSingleBlock","fix":{"range":[2231,2522],"text":"(\n        <div>\n          <Loader\n             type=\"Audio\"\n             color=\"#00BFFF\"\n             height=\"100\"\n             width=\"100\"\n          />\n          <h3 className={styles.terminalText}>Saving payload to engagement directory...</h3>\n        </div>\n        )"}},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":107,"column":12,"nodeType":"MemberExpression","endLine":107,"endColumn":29},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":148,"column":24,"nodeType":"MemberExpression","endLine":148,"endColumn":42},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":173,"column":10,"nodeType":"MemberExpression","endLine":173,"endColumn":33}],"errorCount":25,"warningCount":1,"fixableErrorCount":9,"fixableWarningCount":0,"source":null},"hashOfConfig":"cfglpq"},"/mnt/c/Projects/Prismatica/Diagon/src/diagon-ui/app/main.prod.js":{"size":97636,"mtime":1550370438758,"results":{"filePath":"/mnt/c/Projects/Prismatica/Diagon/src/diagon-ui/app/main.prod.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"cfglpq"}}